generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id                  String   @id @default(cuid())
  businessName        String
  category            String
  address             String
  city                String
  state               String
  zipCode             String
  phone               String
  email               String
  website             String?
  closingDate         DateTime
  discountPercentage  Int
  inventoryDescription String
  reasonForClosing     String?
  ownerName           String
  contactPreference   String
  storeImageUrl       String?
  verificationDocUrl  String?
  latitude            Float?
  longitude           Float?
  isApproved          Boolean  @default(false)
  isFeatured          Boolean  @default(false)  // New field added here
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  userId              String?
  user                User?    @relation(fields: [userId], references: [id])
  @@index([isApproved, createdAt])
  @@index([isFeatured])
  @@index([city, state])
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String    @unique
  emailVerified     DateTime?
  password          String?
  image             String?
  role              String    @default("user")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  resetPasswordExpires DateTime?
  resetPasswordToken   String?
  verificationToken    String?
  stores            Store[]
}

model StoreTip {
  id                String   @id @default(cuid())
  storeName         String
  category          String
  address           String
  city              String
  state             String
  zipCode           String
  submitterEmail    String
  storeImageUrl     String?
  discountPercentage Int?
  latitude          Float?
  longitude         Float?
  status            String   @default("pending") 
  notes             String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}